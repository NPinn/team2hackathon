[tool.poetry]
name = "futurecare"
version = "0.1.0"
description = ""
authors = ["Rafael Dias <rafaelagd@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = "^5.0.7"
chromadb = "^0.5.4"
factory-boy = "^3.3.0"
pytest = "^8.2.2"
pytest-django = "^4.8.0"
pytest-factoryboy = "^2.7.0"
keyring = "^25.2.1"
openai = "^1.37.1"
gunicorn = "^23.0.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
isort = "^5.13.2"
black = "^24.4.2"
mypy = "^1.10.1"
ruff = "^0.5.2"
ipython = "^8.26.0"
pandas-stubs = "^2.2.2.240603"
django-stubs = "^5.0.2"
python-dotenv = "^1.0.1"
debugpy = "^1.8.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "futurecare.settings"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]
addopts = ["-svvv", "--nomigrations", "--no-cov-on-fail", "-m not slow"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
]
filterwarnings = "ignore::DeprecationWarning"

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/settings.py",
    "*/wsgi.py",
    "*/asgi.py",
    "*/__init__.py",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]

ignore_errors = true

[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "futurecare.settings"

[tool.ruff]
exclude = ["*/migrations/*", "*/settings.py", "*/wsgi.py", "*/asgi.py"]
line-length = 79

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PT']

[tool.taskipy.tasks]
lint = "ruff check . --fix && ruff check . --diff"
format = "ruff check . --fix && ruff format ."
pre_test = "task format"
test = "coverage run -m pytest"
post_test = "coverage report; coverage html"
build = "docker compose -f docker/docker-compose.yml build"
up = "docker compose -f docker/docker-compose.yml run futurecare"
run_on_docker = "docker compose -f docker/docker-compose.yml exec futurecare"
down = "docker compose -f docker/docker-compose.yml down --remove-orphans -v"
